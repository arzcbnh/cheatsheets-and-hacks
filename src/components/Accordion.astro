---
interface Props {
    style: string;
    title: string;
    isCore: boolean;
}

const { style, title, isCore } = Astro.props;
---

<div class="accordion">
    <div class="accordion_head">
        <!-- Preserve heading hierarchy, since the "core" category doesn't have a title -->
        {isCore ? <h2 class="accordion_title">{title}</h2> : <h3 class="accordion_title">{title}</h3>}
        <div class="accordion_icon">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" x="0px" y="0px">
                <use xlink:href={"assets/dropdowns.svg#" + style}></use>
            </svg>
        </div>
    </div>
    <!-- Without a wrapper, the body padding is not hidden when the height is set to 0 -->
    <div class="accordion_bodyWrapper">
        <div class="accordion_body">
            <slot />
        </div>
    </div>
</div>

<script>
    function setToggleListener(accordion: Element) {
        const wrapper = accordion.querySelector(".accordion_bodyWrapper") as HTMLElement;
        const head = accordion.querySelector(".accordion_head") as HTMLElement;
        const body = wrapper.querySelector(".accordion_body") as HTMLElement;

        let isOpen = false;
        const hideBody = () => {
            // Check if is open because clicking too quickly may leave an empty body
            if (!isOpen) body.style.display = "none";
        };

        head.addEventListener("click", () => {
            if (isOpen) {
                wrapper.addEventListener("transitionend", hideBody, { once: true });
                wrapper.style.height = "0";
            } else {
                body.style.display = "block";
                wrapper.style.height = wrapper.scrollHeight + "px";
            }

            accordion.classList.toggle("-toggled");
            isOpen = !isOpen;
        });
    }

    document.querySelectorAll(".accordion").forEach(setToggleListener);
</script>
